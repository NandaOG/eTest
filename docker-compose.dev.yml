version: '3.8'

services:
  # Next.js Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: nextjs-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      # Mounts the local source code into the container
      - ./client:/app
      # Use a named volume for node_modules to prevent it from being overwritten by the bind mount
      - node_modules:/app/node_modules
      # Use a named volume to persist the Next.js cache
      - nextjs_cache:/app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 8G

  # Node.js Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: nodejs-backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/mydb
    volumes:                # Map the current directory to the container fo DEVELOPMENT
      - ./server:/app     
      - /app/node_modules
    ports:
      - "4000:4000"
    networks:
      - app-network
    depends_on:
      - db

  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ./out:/usr/share/nginx/html
    ports:
      - "80:80"
    depends_on:
      - frontend
    networks:
      - app-network

  # pgAdmin (PostgreSQL Web UI)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ecommerce@cyberpeakitsolutions.com
      PGADMIN_DEFAULT_PASSWORD: cyberpeak
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  node_modules:
  nextjs_cache:
