version: '3.8'

services:
  # Next.js Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    env_file:
      - ./client/.env
    container_name: nextjs-frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 8G

  # Node.js Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    env_file:
      - ./server/.env
    container_name: nodejs-backend
    volumes:
    - ./server/src/uploads:/app/src/uploads
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/mydb
    ports:
      - "4000:4000"
    networks:
      - app-network
    depends_on:
      - db

  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./out:/usr/share/nginx/html
    ports:
      - "80:80"
    depends_on:
      - frontend
    networks:
      - app-network

  # pgAdmin (PostgreSQL Web UI)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: rajendra
      PGADMIN_DEFAULT_PASSWORD: 250601
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
